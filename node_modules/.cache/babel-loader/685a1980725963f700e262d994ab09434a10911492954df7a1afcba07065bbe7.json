{"ast":null,"code":"var _jsxFileName = \"/Users/aroma/Library/CloudStorage/GoogleDrive-programmingdatashare@gmail.com/\\u30DE\\u30A4\\u30C8\\u3099\\u30E9\\u30A4\\u30D5\\u3099/Project/ReactProject/draganddrop-todo-tutorial-2/src/component/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport dummyData from '../dummyData';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [data, setData] = useState(dummyData);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    console.log(source.droppableId);\n    console.log(destination.droppableId);\n    if (destination.droppableId === '') {\n      console.log(\"aa\");\n    }\n    ;\n    if (source.droppableId !== destination.droppableId) {\n      //別のカラムに移動したとき\n      const sourceColIndex = data.findIndex(e => e.id === source.droppableId);\n      const destinationColIndex = data.findIndex(e => e.id === destination.droppableId);\n      const sourceCol = data[sourceColIndex];\n      const destinationCol = data[destinationColIndex];\n      const sourceTask = [...sourceCol.tasks];\n      const destinationTask = [...destinationCol.tasks];\n\n      //動かし始めたタスク削除\n      const [removed] = sourceTask.splice(source.index, 1);\n      //動かしたあとのカラムにタスク追加\n      destinationTask.splice(destination.index, 0, removed);\n      data[sourceColIndex].tasks = sourceTask;\n      data[destinationColIndex].tasks = destinationTask;\n      setData(data);\n    } else {\n      //同じカラム内での入れ替え\n      const sourceColIndex = data.findIndex(e => e.id === source.droppableId);\n      // console.log(sourceColIndex)\n      const sourceCol = data[sourceColIndex];\n      // console.log(sourceCol)\n\n      const sourceTask = [...sourceCol.tasks];\n      //タスク削除\n      const [removed] = sourceTask.splice(source.index, 1);\n      //タスク追加\n      sourceTask.splice(destination.index, 0, removed);\n      data[sourceColIndex].tasks = sourceTask;\n      setData(data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trello\",\n      children: data.map(section => {\n        return /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: section.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trello-section\",\n            ref: provided.innerRef,\n            ...provided.DroppableProps,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trello-section-title\",\n              children: section.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trello-section-content\",\n              children: [section.tasks.map((task, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: task.id,\n                  index: index,\n                  children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    style: {\n                      ...provided.draggableProps.style,\n                      opacity: snapshot.isDragging ? \"0.3\" : \"1\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 57\n                  }, this)\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 49\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)\n        }, section.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"SApncQPOdDguNmPc0eaf7Gvnb6U=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","dummyData","Card","jsxDEV","_jsxDEV","Main","_s","data","setData","onDragEnd","result","source","destination","console","log","droppableId","sourceColIndex","findIndex","e","id","destinationColIndex","sourceCol","destinationCol","sourceTask","tasks","destinationTask","removed","splice","index","children","className","map","section","provided","ref","innerRef","DroppableProps","title","fileName","_jsxFileName","lineNumber","columnNumber","task","draggableId","snapshot","draggableProps","dragHandleProps","style","opacity","isDragging","placeholder","_c","$RefreshReg$"],"sources":["/Users/aroma/Library/CloudStorage/GoogleDrive-programmingdatashare@gmail.com/マイドライブ/Project/ReactProject/draganddrop-todo-tutorial-2/src/component/Main.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport dummyData from '../dummyData';\nimport Card from './Card';\n\nconst Main = () => {\n    const [data, setData] = useState(dummyData);\n\n    const onDragEnd = (result) => {\n        const { source, destination } = result;\n\n        console.log(source.droppableId)\n        console.log(destination.droppableId)\n\n        if (destination.droppableId === '') {\n            console.log(\"aa\")\n        };\n\n        if (source.droppableId !== destination.droppableId) {\n            //別のカラムに移動したとき\n            const sourceColIndex = data.findIndex((e) => e.id === source.droppableId)\n            const destinationColIndex = data.findIndex(\n                (e) => e.id === destination.droppableId\n            )\n            const sourceCol = data[sourceColIndex]\n            const destinationCol = data[destinationColIndex]\n\n\n            const sourceTask = [...sourceCol.tasks]\n            const destinationTask = [...destinationCol.tasks]\n\n            //動かし始めたタスク削除\n            const [removed] = sourceTask.splice(source.index, 1)\n            //動かしたあとのカラムにタスク追加\n            destinationTask.splice(destination.index, 0, removed)\n\n            data[sourceColIndex].tasks = sourceTask\n            data[destinationColIndex].tasks = destinationTask\n\n            setData(data)\n        } else{\n            //同じカラム内での入れ替え\n            const sourceColIndex = data.findIndex((e) => e.id === source.droppableId)\n            // console.log(sourceColIndex)\n            const sourceCol = data[sourceColIndex]\n            // console.log(sourceCol)\n\n            const sourceTask = [...sourceCol.tasks]\n            //タスク削除\n            const [removed] = sourceTask.splice(source.index, 1)\n            //タスク追加\n            sourceTask.splice(destination.index, 0, removed)\n\n            data[sourceColIndex].tasks = sourceTask\n            setData(data)\n        }\n\n\n\n\n\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"trello\">\n                {data.map((section) => {\n                    return (\n                        <Droppable key={section.id} droppableId={section.id}>\n                            {(provided) => (\n                                <div\n                                    className='trello-section'\n                                    ref={provided.innerRef}\n                                    {...provided.DroppableProps}\n                                >\n                                    <div className=\"trello-section-title\">\n                                        {section.title}\n                                    </div>\n                                    <div className=\"trello-section-content\">\n                                        {section.tasks.map((task, index) => {\n                                            return (\n                                                <Draggable draggableId={task.id} index={index} key={task.id}>\n                                                    {(provided, snapshot) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n\n                                                            style={{\n                                                                ...provided.draggableProps.style,\n                                                                opacity: snapshot.isDragging ? \"0.3\" : \"1\",\n                                                            }}\n                                                        >\n                                                            <Card>{task.title}</Card>\n                                                        </div>\n                                                    )}\n                                                </Draggable>\n                                            )\n                                        })}\n                                        {provided.placeholder}\n                                    </div>\n                                </div>\n                            )}\n                        </Droppable>\n                    );\n                })}\n            </div>\n        </DragDropContext>\n    );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}