{"ast":null,"code":"import _objectSpread from\"/Users/aroma/Library/CloudStorage/GoogleDrive-programmingdatashare@gmail.com/\\u30DE\\u30A4\\u30C8\\u3099\\u30E9\\u30A4\\u30D5\\u3099/Project/ReactProject/test/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/aroma/Library/CloudStorage/GoogleDrive-programmingdatashare@gmail.com/\\u30DE\\u30A4\\u30C8\\u3099\\u30E9\\u30A4\\u30D5\\u3099/Project/ReactProject/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/aroma/Library/CloudStorage/GoogleDrive-programmingdatashare@gmail.com/\\u30DE\\u30A4\\u30C8\\u3099\\u30E9\\u30A4\\u30D5\\u3099/Project/ReactProject/test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';import dummyData from'../dummyData';import Card from'./Card';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Main=function Main(){var _useState=useState(dummyData),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var onDragEnd=function onDragEnd(result){var source=result.source,destination=result.destination;if(source.droppableId!==destination.droppableId){//別のカラムに移動したとき\nvar sourceColIndex=data.findIndex(function(e){return e.id===source.droppableId;});var destinationColIndex=data.findIndex(function(e){return e.id===destination.droppableId;});var sourceCol=data[sourceColIndex];var destinationCol=data[destinationColIndex];var sourceTask=_toConsumableArray(sourceCol.tasks);var destinationTask=_toConsumableArray(destinationCol.tasks);//動かし始めたタスク削除\nvar _sourceTask$splice=sourceTask.splice(source.index,1),_sourceTask$splice2=_slicedToArray(_sourceTask$splice,1),removed=_sourceTask$splice2[0];//動かしたあとのカラムにタスク追加\ndestinationTask.splice(destination.index,0,removed);data[sourceColIndex].tasks=sourceTask;data[destinationColIndex].tasks=destinationTask;setData(data);}else{//同じカラム内での入れ替え\nvar _sourceColIndex=data.findIndex(function(e){return e.id===source.droppableId;});// console.log(sourceColIndex)\nvar _sourceCol=data[_sourceColIndex];// console.log(sourceCol)\nvar _sourceTask=_toConsumableArray(_sourceCol.tasks);//タスク削除\nvar _sourceTask$splice3=_sourceTask.splice(source.index,1),_sourceTask$splice4=_slicedToArray(_sourceTask$splice3,1),_removed=_sourceTask$splice4[0];//タスク追加\n_sourceTask.splice(destination.index,0,_removed);data[_sourceColIndex].tasks=_sourceTask;setData(data);}};return/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:onDragEnd,children:/*#__PURE__*/_jsx(\"div\",{className:\"trello\",children:data.map(function(section){return/*#__PURE__*/_jsx(Droppable,{droppableId:section.id,children:function children(provided){return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:\"trello-section\",ref:provided.innerRef},provided.DroppableProps),{},{children:[/*#__PURE__*/_jsx(\"div\",{className:\"trello-section-title\",children:section.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"trello-section-content\",children:[section.tasks.map(function(task,index){return/*#__PURE__*/_jsx(Draggable,{draggableId:task.id,index:index,children:function children(provided,snapshot){return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:provided.innerRef},provided.draggableProps),provided.dragHandleProps),{},{style:_objectSpread(_objectSpread({},provided.draggableProps.style),{},{opacity:snapshot.isDragging?\"0.3\":\"1\"}),children:/*#__PURE__*/_jsx(Card,{children:task.title})}));}},task.id);}),provided.placeholder]})]}));}},section.id);})})});};export default Main;","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","dummyData","Card","jsx","_jsx","jsxs","_jsxs","Main","_useState","_useState2","_slicedToArray","data","setData","onDragEnd","result","source","destination","droppableId","sourceColIndex","findIndex","e","id","destinationColIndex","sourceCol","destinationCol","sourceTask","_toConsumableArray","tasks","destinationTask","_sourceTask$splice","splice","index","_sourceTask$splice2","removed","_sourceTask$splice3","_sourceTask$splice4","children","className","map","section","provided","_objectSpread","ref","innerRef","DroppableProps","title","task","draggableId","snapshot","draggableProps","dragHandleProps","style","opacity","isDragging","placeholder"],"sources":["/Users/aroma/Library/CloudStorage/GoogleDrive-programmingdatashare@gmail.com/マイドライブ/Project/ReactProject/test/src/component/Main.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport dummyData from '../dummyData';\nimport Card from './Card';\n\nconst Main = () => {\n    const [data, setData] = useState(dummyData);\n\n    const onDragEnd = (result) => {\n        const { source, destination } = result;\n\n        if (source.droppableId !== destination.droppableId) {\n            //別のカラムに移動したとき\n            const sourceColIndex = data.findIndex((e) => e.id === source.droppableId)\n            const destinationColIndex = data.findIndex(\n                (e) => e.id === destination.droppableId\n            )\n            const sourceCol = data[sourceColIndex]\n            const destinationCol = data[destinationColIndex]\n\n\n            const sourceTask = [...sourceCol.tasks]\n            const destinationTask = [...destinationCol.tasks]\n\n            //動かし始めたタスク削除\n            const [removed] = sourceTask.splice(source.index, 1)\n            //動かしたあとのカラムにタスク追加\n            destinationTask.splice(destination.index, 0, removed)\n\n            data[sourceColIndex].tasks = sourceTask\n            data[destinationColIndex].tasks = destinationTask\n\n            setData(data)\n        } else {\n            //同じカラム内での入れ替え\n            const sourceColIndex = data.findIndex((e) => e.id === source.droppableId)\n            // console.log(sourceColIndex)\n            const sourceCol = data[sourceColIndex]\n            // console.log(sourceCol)\n\n            const sourceTask = [...sourceCol.tasks]\n            //タスク削除\n            const [removed] = sourceTask.splice(source.index, 1)\n            //タスク追加\n            sourceTask.splice(destination.index, 0, removed)\n\n            data[sourceColIndex].tasks = sourceTask\n            setData(data)\n        }\n\n\n\n\n\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"trello\">\n                {data.map((section) => {\n                    return (\n                        <Droppable key={section.id} droppableId={section.id}>\n                            {(provided) => (\n                                <div\n                                    className='trello-section'\n                                    ref={provided.innerRef}\n                                    {...provided.DroppableProps}\n                                >\n                                    <div className=\"trello-section-title\">\n                                        {section.title}\n                                    </div>\n                                    <div className=\"trello-section-content\">\n                                        {section.tasks.map((task, index) => {\n                                            return (\n                                                <Draggable draggableId={task.id} index={index} key={task.id}>\n                                                    {(provided, snapshot) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n\n                                                            style={{\n                                                                ...provided.draggableProps.style,\n                                                                opacity: snapshot.isDragging ? \"0.3\" : \"1\",\n                                                            }}\n                                                        >\n                                                            <Card>{task.title}</Card>\n                                                        </div>\n                                                    )}\n                                                </Draggable>\n                                            )\n                                        })}\n                                        {provided.placeholder}\n                                    </div>\n                                </div>\n                            )}\n                        </Droppable>\n                    );\n                })}\n            </div>\n        </DragDropContext>\n    );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}